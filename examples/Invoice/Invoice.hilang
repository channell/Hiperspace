%domain (ERP);%ids;
%function (unary, changed, ERP.ERPFunctions.Changed, Boolean);
%function (unary, changedLines, ERP.ERPFunctions.ChangedLines, Boolean);

view Edge2 : Edge = Edge();
view Edge3 : Edge = Edge();
view Edge4 : Edge = Edge();
view Edge5 : Edge = Edge();
view Edge6 : Edge = Edge();

entity ERP.Location.Address : Versioned
    = Node  (Name = "{ Street: '" + Street + "', PostalCode: '" + PostalCode + "'}", TypeName = "Address", SKey = SKey),
      Edge  (From = this, To = Country, TypeName = "Address-Country") #7

(
    Id              : Int32 #1
)
{
    Street          : String #3,
    Town            : String #4,
    City            : String #5,
    County          : String #6,
    Country         : ERP.Location.Country #7,
    PostalCode      : String #8,
    Valid           = Country = null || PostalCode = null ? false : true #9
};

entity ERP.Location.Country : Versioned
    = Node  (Name = Name, SKey = SKey, TypeName = "Country") #8
(
    Id              : Int16 #1
)
{
    Name            : String #3,
    ShippingCharge  : Decimal #4,
    Valid           = Name = null ? false : true #5
};

entity ERP.Location.Store : ERP.Location.Address #10
{
    Name            : String #10
}
[
    StoreSales      : ERP.Sales.Order (Store = this) #9
];

entity ERP.Finance.Tarriff : Versioned
    = Node  (Name = From.Name + " to " + To.Name, SKey = SKey, TypeName = "Tarriff"),
      Edge  (From = From, To = To, TypeName = "Tarriff") #11
(
    From            : ERP.Location.Country #1,
    To              : ERP.Location.Country #2
)
{
    Tax             : ERP.Finance.Tax #4,
    Valid           = From = null || To = null || Tax = null ? false : true #5
};

entity ERP.Finance.Tax : Versioned #12
(
    Id              : Int16 #1
)
{
    Name            : String #3,
    Rate            : Decimal #4,
    Valid           = Name = null || Rate = null ? false : true #5
};

entity ERP.Finance.Shipping : Versioned
    = Node  (Name = From.Name + " to " + To.Name, SKey = SKey, TypeName = "Shipping"),
      Edge  (From = From, To = To, TypeName = "Shipping") #13
(
    From            : ERP.Location.Country #1,
    To              : ERP.Location.Country #2
)
{
    Fee             : Decimal #4,
    Valid           = From = null || To = null || Fee = null ? false : true #5
};

entity ERP.Products.Product : Versioned
    = Node  (Name = Name, SKey = SKey, TypeName = "Product") #16
(
    Id              : Int32 #1
)
{
    Name            : String #3,
    Tax             : ERP.Finance.Tax #4,
    Supplier        : ERP.Client.Customer #5,
    Shipping        : Decimal #6,
    Valid           = Name = null ||Tax = null || Supplier = null || Shipping = null ? false : true #7
}
[
    Price           : ERP.Products.Price #18,
    Rate            = Tax.Rate
];

aspect ERP.Products.Price : Versioned
{
    Name            : String #3,
    Sell            : Decimal #4,
    Buy             : Decimal #5,
    Valid           = Name = null || Sell = null || Buy = null ? false : true #6
};

entity ERP.Client.Customer : Versioned
    = Node  (Name = Name, SKey = SKey, TypeName = "Customer"),
      Edge  (From = this, To = BillTo, TypeName = "BillTo"),
      Edge2 (From = this, To = ShipTo, TypeName = "BillTo") #20
(
    Id              : Int32 #1
)
{
    Name            : String #3,
    BillTo          : ERP.Location.Address #4,
    ShipTo          : ERP.Location.Address #5,
    Valid           = Name = null || BillTo = null || BillTo.Valid = false || ShipTo = null || ShipTo.Valid = false ? false : true #6
}
[
    CustomerOrders  : ERP.Sales.Order  (Customer = this) #19
];

entity ERP.Sales.Salesperson
    = Node  (Name = Name, SKey = SKey, TypeName = "Salesperson") #22
(
    Id              : Int16 #1
)
{
    Name            : String #2,
    CommissionRate  = 0.0 #3,
    Valid           = Name = null ? false : true #4
}
[
    Sales           : ERP.Sales.Order (Salesperson = this) #21
];

value ERP.Sales.OrderLine #27
(
    LineNumber      : Int16 #1
)
{
    Product         : ERP.Products.Product #2,
    Units           : Decimal #3,
    Valid           = Product = null || Units = null ? false : true #4
}
[
    Price           = Product.Price.Sell * Units,
    Cost            = (Product.Price.Buy * Units) + Product.Shipping,
    Shipping        = Product.Shipping,
    Tax             = Product.Rate * Units
];

"
    An order placed by a customer for delivery
    <remarks>the store and customer can not be changed once it has been invoiced </remarks>
"
entity ERP.Sales.Order : Versioned
    = Node  (Name = "", SKey = SKey, TypeName = "Order"),
      Edge  (From = this,        To = Customer,    TypeName = "Order-Customer"),
      Edge2 (From = Customer,    To = this,        TypeName = "Customer-Order"),
      Edge3 (From = this,        To = Store,       TypeName = "Order-Store"),
      Edge4 (From = Store,       To = this,        TypeName = "Store-Order"),
      Edge5 (From = this,        To = Salesperson, TypeName = "Order-Sales"),
      Edge6 (From = Salesperson, To = this,        TypeName = "Sales-Order") #42
(
    OrderNumber     : Int32 #1
)
{
    Customer        : ERP.Client.Customer #3,
    Store           : ERP.Location.Store #4,
    Salesperson     : ERP.Sales.Salesperson #5,

    "all the order lines included in the order"
    Lines           : Set <ERP.Sales.OrderLine> #6,
    Valid           = Customer = null || changed(Customer) = true ||
                      Store = null || _changeStore = true ||
                      count(Lines.LineNumber) = 0 || _changeLines = true
                      ? false : true #7
}
[
    Invoiced        = Invoice = null ? true : false,
    _changeStore    = changed(Store) = true && Invoiced = true ? true : false,
    _changeLines    = changedLines(this) = true && Invoiced = true ? true : false,

    "optional tarriff for this order - ommision implies tarriff free trade"
    Tariff          : ERP.Finance.Tarriff (From = Store.Country, To = Customer.BillTo.Country) #31,

    "optional internnational shipping sharges "
    Shipping        : ERP.Finance.Shipping (From = Store.Country, To = Customer.ShipTo.Country) #32,

    "total value of the order for all lines"
    Total           = sum (Lines.Price),

    "Shipping cost can only be calculated once we know if the order is international"
    ShippingCost    = Shipping = null ? sum (Lines.Shipping) : sum (Lines.Shipping) + max (Shipping.Fee),

    SalesTax        = sum (Lines.Tax),
    TariffTax       = Tariff = null ? 0.0 : max(Tariff.Tax.Rate) * Total,

    "Bill price sent to the customer"
    Bill            = Total + ShippingCost + SalesTax + TariffTax,

    "The cost of sourcing the products for the order"
    Cost            = sum (Lines.Cost),

    Commission      = Salesperson = null ? 0.0 : Profit * Salesperson.CommissionRate,

    "Gross profit from order, less costs and Commission"
    Profit          = 0.0 + Total - Cost,

    "the optional invoice aspect with coists and tax frozen "
    Invoice         : ERP.Sales.Invoice #46 
];
"
    Frozen value of order 
"
aspect ERP.Sales.Invoice 
    = Node  (Name = "", SKey = SKey, TypeName = "Invoice"),
      Edge  (From = this,   To = owner, TypeName = "Invoice"),
      Edge2 (From = owner,  To = this,  TypeName = "Invoiced")
{
    TaxDate         : DateTime #2,
    Total           : Decimal #3,
    ShippingCost    : Decimal #4,
    SalesTax        : Decimal #5,
    TariffTax       : Decimal #6,
    Cost            : Decimal #7,
    Profit          : Decimal #8,
    Commission      : Decimal #9
} 
[
    Bill            = 0.0 + Total + ShippingCost + SalesTax + TariffTax
];
