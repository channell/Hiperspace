<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net8.0;net9.0</TargetFrameworks>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Hiperspace Rocks</Title>
    <Description>HiperSpace RocksDB adaptor</Description>
    <PackageIcon>Hiper.png</PackageIcon>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
    <Copyright>Cepheis Ltd (C) 2023, 2024, 2025</Copyright>
    <PackageReleaseNotes>
      # Overview
      This release is primarily concerned with performance when used in a server context the volume if data is huge and accessed via `Hiperspace.DB` and many CPU-cores are available.

      Performance is addressed with greater parallelism (graph `Node` and `Edge` queries already execute in parallel) and server-side filtering with using SQL queries.

      ## Parallelism
      `PartitionSpace` and `GenerationSpace` have been updated to search each of the child spaces in parallel and collate results to return to a calling space.  For very large hiperspaces `PartitionSpace` enables `Hiperspace.DB` to match the performance of direct/local hiperspaces by executing access in parallel.  Hiperspace uses versioning to avoid transaction contention when multiple sessions are accessing a Space, as historical versions of a `GenerationSpace`  never ned to be updated they are opened with read-only option, which obviates the need for rockshare to mediate access to the underlying files.

      ## SQL Queries
      Hiperspace is optimized for key or index access to efficiently search hiperspace for elements that match key or key-part criteria.

      For the model `entity Customer ( Id : Int64 ) { Name : String, ...};`, a  client query `from c in space.Customers where c.Id == 42' is translated into 'space.Customers.Find (new Customer { Id = 42} )` which in turn is translated into `CustomerKeyPath.Get (42)`, which directly fetches the customer from Hiperspace.

      For the model
      ```
      entity Customer ( Id : Int64 ) { Name : String, ... [Accounts : Account ].
      segment Account ( Id : Int64 ) { Title : String, ...};
      ```
      A query `from as in space.CustomerAccounts where owner.Id == 42' is translated into 'space.CustomerAccounts.Find (new Account { owner = new Customer { Id = 42} })` which in turn is translated into `CustomerAccountKeyPath.Find (42)` retrieving all Accounts that are owned by Customer 42.

      For the model
      ```
      entity Customer ( Id : Int64 ) { Name : String, ...} [ Accounts : Account ( Customer = this ) ];
      entity Account ( Id : Int64 ) { Title : String, Customer : Customer, ...};
      ```
      A query `from as in space.Accounts where Customer.Id == 42' is translated into 'space.Accounts.Find (new Account { Customer = new Customer { Id = 42} })` which in turn is translated into `AccountCustonerIndex Path.Find (42)` retrieving all Accounts that have a Customer 42, because the Customer extension `Accounts : Account ( Customer = this )` causes an index to be created on Account.

      **If** the extension `Accounts : Account ( Customer = this )` is omitted, the Account `SetSpace` is scanned (with a residual condition Customer.KeyType.Id of 42), but if the query is `from as in space.Accounts where Customer.Id &lt; 42' the criteria is evaluated once the results have been returned - potentially a very large set.

      ### Query
      The `Query` function allows 'space.Accounts.Query ("SELECT Account.* FROM Accounts WHERE Accounts.Customer.Id &lt; 42") to be used to send the query to a `Hiperspace.DB` server where the results will be filtered before return to the client.
    </PackageReleaseNotes>
    <PackageLicenseExpression>GPL-2.0-or-later</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
    <Authors>Stephen Channell</Authors>
    <Company>Cepheis Ltd</Company>
    <PackageProjectUrl>https://www.cepheis.com/hiperspace/hiperspace-rocks</PackageProjectUrl>
    <RepositoryUrl>https://github.com/channell/Hiperspace/tree/master/src/Hiperspace.Rocks</RepositoryUrl>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\Hiper.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.HashCode" />
    <!--<PackageReference Include="protobuf-net.Core" />-->
    <PackageReference Include="RocksDB" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="readme.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Hiperspace\Hiperspace.csproj" />
  </ItemGroup>
</Project>